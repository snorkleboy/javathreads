

//new Task(()->{
//        SynchInt doneNum = new SynchInt(0);
//        File[] files = getFiles()
//        Locations[] locations = new Synchlocations()
//        for(File[] file: files){
//            String filestr = readFile(file);
//            new Task(()->{
//                locations.add(processFile(fileStr));
//                doneNum++;
//            }
//        }
//        doneNum.Awken(Thread.currentThread(),getFiles().length, timeout);writeFiles(locations);
//        ||
//        doneNum.upon(getFiles().length,()->{
//            writeFiles(locations); //possible not ran, memory leak?
//        });
//
//})
===========

Async extends Task{
    Thenable lam;
    completed = false;
    Thenable onCompleteCallback
    Object result;
    Async(Thenable lambda){
        lam = lambda
    }
    public override void run(){
        call();
    }
    public void call(){
        result = lam();
        completed = true;
        if (onCompleteCallback){
            onCompleteCallback();
        }
    }
    void onComplete(thenable lambda){
        onCompleteCallback = lambda;
        if (completed){
            onCompleteCallback(results);
        }
    }
    Static void await(Task[] tasks){
          numDone = 0;
          numToAwait = tasks.length
          parentThread = Thread.CurrentThread
          for(Task task:tasks){
            task.onComplete(()->{
                  numDone++
                  if (numDone==numToAwait){
                      Awaken(parentThread)
                  }
             })
          }

          wait();
          new Task(()->{thenCallBack()});
      }
}
//new Async(()->scanDirectory)
//    .then(files->{
//         File[] files = (File[])filesObject;
//        <file,locations[]> results = new <file,locations>;
//        TaskArray tasks= new TaskArray;
//
//        for(File file : files){
//            String json = readFile(file);
//            tasks.add(
//                new Task(()->processFile(json))
//                    .then((locations)->results.put(file,locations))
//            );
//        })
//
//        Async.await(tasks)
//                .then(()->print(results));
//
//    })



